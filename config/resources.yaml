###
# fastq2bam rules
##

# fastq download
get_fastq_pe:
  threads: 8
  mem: 4000

# index reference
index_ref:
  mem: 10000

# fastp program
fastp:
  threads: 8
  mem: 4000

# bwa mapping
bwa_map:
  threads: 31
  mem: 15000
# sort bam with picard's SortSam tool
sort_bam:
    threads: 4
    mem_per_thread: 1000

#merge bams
merge_bams:
    mem: 9000
    threads: 2

# mark duplicates with picard's MarkDuplicates
dedup:
  threads: 31
  mem: 9000
# calculate BAM summaries with samtools and picard
bam_sumstats:
  mem: 9000
merge_bams:
  mem: 9000
bedtools:
  mem: 4000

# Sentieon tools
sentieon_map:
  machine_type: "n2d-standard-32"
  threads: 31
  mem: 15000

sentieon_dedup:
  machine_type: "n2d-standard-32"
  threads: 31
  mem: 15000

sentieon_haplotyper:
  machine_type: "n2d-standard-32"
  threads: 31
  mem: 15000

sentieon_combine_gvcf:
  machine_type: "n2d-standard-32"
  threads: 31
  mem: 15000
  disk_mb: 2000000

###
# Intervals workflow
###

# preprocess genome, create intervals
# picard's create CreateSequenceDictionary, samtools faidx
process_ref:
  mem: 15000
# custom python algo to create intervals
create_intervals:
  mem: 5000

## Callable sites workflow

# genmap map
genmap:
  threads: 10
  mem: 20000
genmap_sort:
  mem: 4000
compute_d4:
  mem: 4000
  threads: 4
merge_d4:
  mem: 10000
callable_bed:
  mem: 10000

###
# bam2vcf workflows
###

# gatk HaplotypeCaller
bam2gvcf:
  mem: 9000
# gatk GenomicsDBImport
gvcf2DB:
  mem: 32000
# gatk GenotypeGVCFs
DB2vcf:
  mem: 32000
# gatk filterVcfs
filterVcfs:
  mem: 4000
# gatk GatherVcfs
gatherVcfs:
  mem: 9000
# vcftools program
vcftools:
  mem: 8000
# plink
plink:
  threads: 5
admixture:
  mem: 4000
